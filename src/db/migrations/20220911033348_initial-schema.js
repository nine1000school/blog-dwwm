export const up = async (knex) => {
  await knex.schema.createTable("users", (table) => {
    table.increments("id")
    table.text("email").notNullable().unique()
    table.text("passwordHash").notNullable()
    table.text("passwordSalt").notNullable()
    table.text("username").notNullable().unique()
    table.text("displayName").notNullable()
    table.timestamps(true, true, true)
  })
  await knex.schema.createTable("seasons", (table) => {
    table.increments("id")
    table.text("name").notNullable().unique()
    table.datetime("year").notNullable().unique()
  })
  await knex.schema.createTable("circuits", (table) => {
    table.increments("id")
    table.text("name").notNullable().unique()
    table.text("location").notNullable()
    table.integer("length").notNullable()
    table.integer("numberOfTurn").notNullable()
  })
  await knex.schema.createTable("races", (table) => {
    table.increments("id")
    table.text("name").notNullable().unique()
    table.text("location").notNullable()
    table.datetime("raceDate").notNullable()
    // table.datetime("qualificationDate1").notNullable()
    // table.integer("qualificationDuration1").notNullable()
    // table.datetime("qualificationDate2").notNullable()
    // table.integer("qualificationDuration2").notNullable()
    // table.datetime("qualificationDate3").notNullable()
    // table.integer("qualificationDuration3").notNullable()
    table.integer("seasonId").notNullable().references("id").inTable("seasons").onDelete("CASCADE")
    table.integer("circuitId").notNullable().references("id").inTable("circuits").onDelete("CASCADE")
  })
  await knex.schema.createTable("comments", (table) => {
    table.increments("id")
    table.text("content").notNullable()
    table.timestamps(true, true, true)
    table.integer("userId").notNullable().references("id").inTable("users").onDelete("CASCADE")
    table.integer("raceId").notNullable().references("id").inTable("races").onDelete("CASCADE")
  })
  await knex.schema.createTable("teams", (table) => {
    table.increments("id")
    table.text("name").notNullable()
    table.text("nationnality").notNullable()
  })
  await knex.schema.createTable("drivers", (table) => {
    table.increments("id")
    table.text("name").notNullable()
    table.text("nationnality").notNullable()
    table.integer("teamId").notNullable().references("id").inTable("teams").onDelete("CASCADE")
  })
  await knex.schema.createTable("events", (table) => {
    table.increments("id")
    table.text("point").notNullable()
    table.text("penalty").notNullable()
    table.text("abord").notNullable()
    table.text("crash").notNullable()
    table.text("puncture").notNullable()
    table.integer("raceId").notNullable().references("id").inTable("races").onDelete("CASCADE")
  })
    await knex.schema.createTable("rel_races_drivers", (table) => {
    table.integer("raceId").notNullable().references("id").inTable("races").onDelete("CASCADE")
    table.integer("driverId").notNullable().references("id").inTable("drivers").onDelete("CASCADE")
    table.primary(["raceId", "driverId"])
  })
}

export const down = async (knex) => {
  await knex.schema.dropTable("rel_races_drivers")
  await knex.schema.dropTable("events")
  await knex.schema.dropTable("drivers")
  await knex.schema.dropTable("teams")
  await knex.schema.dropTable("comments")
  await knex.schema.dropTable("races")
  await knex.schema.dropTable("users")
  await knex.schema.dropTable("circuits")
  await knex.schema.dropTable("seasons")
}